version: '3.8'

services:
  # MySQL Database service
  mysql:
    build:
      context: .
      dockerfile: Dockerfile.mysql
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: nandhu01
      MYSQL_DATABASE: resume_analyzer
    ports:
      - "3307:3306"  # Map MySQL port 3306 to host port 3307
    networks:
      - backend_network
    volumes:
      - mysql_data:/var/lib/mysql  # Optional: Persist MySQL data between container restarts
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}", "--silent"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  # Backend 1 for app.py (your main backend)
  backend1:
    build:
      context: .
      dockerfile: Dockerfile.app
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    networks:
      - backend_network

  backend2:
    build:
      context: .
      dockerfile: Dockerfile.server
    ports:
      - "5001:5001"
    depends_on:
      - mysql
    environment:
      - MYSQL_HOST=localhost        # Use the mysql service name as host
      - MYSQL_USER=root
      - MYSQL_PASSWORD=nandhu01
      - MYSQL_DB=resume_analyzer
    networks:
      - backend_network
    entrypoint: ["sh", "-c", "while ! mysqladmin ping -h mysql --silent; do sleep 1; done; python server.py"]

  # Frontend (React app)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - frontend_network

# Define networks
networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge

# Volumes
volumes:
  mysql_data:
